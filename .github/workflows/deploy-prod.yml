name: Deploy to Production Server

on:
  push:
    branches: [ "release" ]

permissions:
  contents: read

env:
  DOCKER_FILE: Dockerfile-prod

jobs:
  build_and_deploy_to_prod:

    runs-on: ubuntu-latest

    steps:
      ## checkout and setup jdk
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'

      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## gradle build without test jar
      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      ## docker build & push to hub
      - name: Docker build & push to hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          
          REPO_OFFER_PROD=${{ secrets.DOCKER_USERNAME }}/offer-prod
          IMG_OFFER_PROD=${REPO_OFFER_PROD}:latest
          
          docker build . -t ${IMG_OFFER_PROD} -f ${DOCKER_FILE}
          docker push ${IMG_OFFER_PROD}
          
      ## deploy to CD server with SSH
      - name: Deploy to CD with SSH
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            /home/github/offer-script/deploy-prod.sh
